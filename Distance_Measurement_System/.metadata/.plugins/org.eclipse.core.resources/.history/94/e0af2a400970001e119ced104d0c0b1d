/******************************************************************************
 *
 * Module: HC-SR04 Ultrasonic
 *
 * File Name: ultrasonic.c
 *
 * Description: source file for the ultrasonic driver
 *
 * Author: Kareem Abd El-Moneam
 *
 *******************************************************************************/

#include "ultrasonic.h"
#include "icu.h"
#include "gpio.h"
#include "common_macros.h"
#include "std_types.h"
#include <util/delay.h>

/*******************************************************************************
 *                           Global Variables                                  *
 *******************************************************************************/
/* Global variable to calculate the high time and distance */
uint16 g_timeHigh = 0;

/*******************************************************************************
 *                      Functions Definitions                                  *
 *******************************************************************************/
/*
 * Description:
 * Initialize the ICU driver as required.
 * Setup the ICU call back function.
 * Setup the direction for the trigger pin as output pin through the GPIO driver.
 */
void Ultrasonic_init(void)
{
	ICU_ConfigType ICU_Configurations = {F_CPU_8,RISING};
	ICU_init(&ICU_Configurations);
	ICU_setCallBack(Ultrasonic_edgeProcessing);
	GPIO_setupPinDirection(ULTRASONIC_TRIGGER_PORT_ID,ULTRASONIC_TRIGGER_PIN_ID,PIN_OUTPUT);
}

/*
 * Description:
 * Send the Trigger pulse to the ultrasonic.
 */
void Ultrasonic_Trigger(void)
{
	/* Send a 10μs (microsecond) pulse to trigger the ultrasonic sensor */
	/* Set the trigger pin high */
	GPIO_writePin(ULTRASONIC_TRIGGER_PORT_ID, ULTRASONIC_TRIGGER_PIN_ID, LOGIC_HIGH);
	/* Wait for 10μs */
	_delay_us(10);
	/* Set the trigger pin low */
	GPIO_WritePin(ULTRASONIC_TRIGGER_PORT_ID, ULTRASONIC_TRIGGER_PIN_ID, LOGIC_LOW);
}

/*
 * Description:
 * This is the call back function called by the ICU driver.
 * This is used to calculate the high time (pulse time) generated by the ultrasonic sensor.
 */
void Ultrasonic_edgeProcessing(void)
{
	/* Static variable to keep track of whether the function is currently processing a rising or falling edge */
	static uint8 s_edgeCount = 0;
	s_edgeCount++;
	if(s_edgeCount == 1)
	{
		/*
		 * Clear the timer counter register to start measurements from the
		 * first detected rising edge
		 */
		ICU_clearTimerValue();
		/* Detect falling edge */
		ICU_setEdgeDetectionType(FALLING);
	}
	else if(s_edgeCount == 2)
	{
		/* Store the High time value */
		g_timeHigh = ICU_getInputCaptureValue();
		/* Reset s_edgeCount for the next cycle */
		s_edgeCount = 0;
		/* Detect rising edge */
		ICU_setEdgeDetectionType(RISING);
	}
}

/*
 * Description:
 * Send the trigger pulse by using Ultrasonic_Trigger function.
 * Start the measurements by the ICU from this moment.
 * Returns the measured distance in centimeters.
 * */
uint16 Ultrasonic_readDistance(void)
{
	uint16 distance_cm = 0;
	Ultrasonic_Trigger();
	distance_cm = ((float)(g_timeHigh) / 58.8);
	return distance_cm;
}
